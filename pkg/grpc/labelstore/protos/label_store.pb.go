// Code generated by protoc-gen-go.
// source: pkg/grpc/labelstore/protos/label_store.proto
// DO NOT EDIT!

/*
Package label_store_protos is a generated protocol buffer package.

It is generated from these files:
	pkg/grpc/labelstore/protos/label_store.proto

It has these top-level messages:
	WatchMatchesRequest
	Labeled
	WatchMatchesResponse
*/
package label_store_protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LabelType int32

const (
	LabelType_unknown                LabelType = 0
	LabelType_pod                    LabelType = 1
	LabelType_node                   LabelType = 2
	LabelType_pod_clusters           LabelType = 3
	LabelType_replication_controller LabelType = 4
	LabelType_rolls                  LabelType = 5
)

var LabelType_name = map[int32]string{
	0: "unknown",
	1: "pod",
	2: "node",
	3: "pod_clusters",
	4: "replication_controller",
	5: "rolls",
}
var LabelType_value = map[string]int32{
	"unknown":                0,
	"pod":                    1,
	"node":                   2,
	"pod_clusters":           3,
	"replication_controller": 4,
	"rolls":                  5,
}

func (x LabelType) String() string {
	return proto.EnumName(LabelType_name, int32(x))
}
func (LabelType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type WatchMatchesRequest struct {
	Selector  string    `protobuf:"bytes,1,opt,name=selector" json:"selector,omitempty"`
	LabelType LabelType `protobuf:"varint,2,opt,name=label_type,json=labelType,enum=label_store_protos.LabelType" json:"label_type,omitempty"`
}

func (m *WatchMatchesRequest) Reset()                    { *m = WatchMatchesRequest{} }
func (m *WatchMatchesRequest) String() string            { return proto.CompactTextString(m) }
func (*WatchMatchesRequest) ProtoMessage()               {}
func (*WatchMatchesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WatchMatchesRequest) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *WatchMatchesRequest) GetLabelType() LabelType {
	if m != nil {
		return m.LabelType
	}
	return LabelType_unknown
}

type Labeled struct {
	LabelType LabelType         `protobuf:"varint,1,opt,name=label_type,json=labelType,enum=label_store_protos.LabelType" json:"label_type,omitempty"`
	Id        string            `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Labeled) Reset()                    { *m = Labeled{} }
func (m *Labeled) String() string            { return proto.CompactTextString(m) }
func (*Labeled) ProtoMessage()               {}
func (*Labeled) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Labeled) GetLabelType() LabelType {
	if m != nil {
		return m.LabelType
	}
	return LabelType_unknown
}

func (m *Labeled) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Labeled) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type WatchMatchesResponse struct {
	Labeled []*Labeled `protobuf:"bytes,1,rep,name=labeled" json:"labeled,omitempty"`
}

func (m *WatchMatchesResponse) Reset()                    { *m = WatchMatchesResponse{} }
func (m *WatchMatchesResponse) String() string            { return proto.CompactTextString(m) }
func (*WatchMatchesResponse) ProtoMessage()               {}
func (*WatchMatchesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WatchMatchesResponse) GetLabeled() []*Labeled {
	if m != nil {
		return m.Labeled
	}
	return nil
}

func init() {
	proto.RegisterType((*WatchMatchesRequest)(nil), "label_store_protos.WatchMatchesRequest")
	proto.RegisterType((*Labeled)(nil), "label_store_protos.Labeled")
	proto.RegisterType((*WatchMatchesResponse)(nil), "label_store_protos.WatchMatchesResponse")
	proto.RegisterEnum("label_store_protos.LabelType", LabelType_name, LabelType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LabelStore service

type LabelStoreClient interface {
	WatchMatches(ctx context.Context, in *WatchMatchesRequest, opts ...grpc.CallOption) (LabelStore_WatchMatchesClient, error)
}

type labelStoreClient struct {
	cc *grpc.ClientConn
}

func NewLabelStoreClient(cc *grpc.ClientConn) LabelStoreClient {
	return &labelStoreClient{cc}
}

func (c *labelStoreClient) WatchMatches(ctx context.Context, in *WatchMatchesRequest, opts ...grpc.CallOption) (LabelStore_WatchMatchesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LabelStore_serviceDesc.Streams[0], c.cc, "/label_store_protos.LabelStore/WatchMatches", opts...)
	if err != nil {
		return nil, err
	}
	x := &labelStoreWatchMatchesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LabelStore_WatchMatchesClient interface {
	Recv() (*WatchMatchesResponse, error)
	grpc.ClientStream
}

type labelStoreWatchMatchesClient struct {
	grpc.ClientStream
}

func (x *labelStoreWatchMatchesClient) Recv() (*WatchMatchesResponse, error) {
	m := new(WatchMatchesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for LabelStore service

type LabelStoreServer interface {
	WatchMatches(*WatchMatchesRequest, LabelStore_WatchMatchesServer) error
}

func RegisterLabelStoreServer(s *grpc.Server, srv LabelStoreServer) {
	s.RegisterService(&_LabelStore_serviceDesc, srv)
}

func _LabelStore_WatchMatches_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchMatchesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LabelStoreServer).WatchMatches(m, &labelStoreWatchMatchesServer{stream})
}

type LabelStore_WatchMatchesServer interface {
	Send(*WatchMatchesResponse) error
	grpc.ServerStream
}

type labelStoreWatchMatchesServer struct {
	grpc.ServerStream
}

func (x *labelStoreWatchMatchesServer) Send(m *WatchMatchesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _LabelStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "label_store_protos.LabelStore",
	HandlerType: (*LabelStoreServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchMatches",
			Handler:       _LabelStore_WatchMatches_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/grpc/labelstore/protos/label_store.proto",
}

func init() { proto.RegisterFile("pkg/grpc/labelstore/protos/label_store.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0x51, 0x8b, 0xd4, 0x30,
	0x10, 0xbe, 0xb4, 0xb7, 0xd7, 0xeb, 0xec, 0x71, 0x84, 0xf1, 0x90, 0x52, 0x11, 0x96, 0xbe, 0x58,
	0x44, 0x76, 0x65, 0x45, 0x50, 0x11, 0x7c, 0xf2, 0xcd, 0x7b, 0xa9, 0x82, 0x8f, 0xa5, 0xd7, 0x0c,
	0x6b, 0xd9, 0x90, 0xc4, 0x24, 0x55, 0xfa, 0x3b, 0xfd, 0x43, 0xd2, 0x66, 0x77, 0x59, 0x75, 0x55,
	0xee, 0xa5, 0x9d, 0xf9, 0xf2, 0xe5, 0xfb, 0x66, 0x3e, 0x02, 0xcf, 0xcc, 0x76, 0xb3, 0xda, 0x58,
	0xd3, 0xae, 0x64, 0x73, 0x47, 0xd2, 0x79, 0x6d, 0x69, 0x65, 0xac, 0xf6, 0xda, 0x05, 0xa4, 0x9e,
	0xa0, 0xe5, 0x04, 0x21, 0x1e, 0x41, 0x75, 0x60, 0x15, 0x1a, 0x1e, 0x7c, 0x6e, 0x7c, 0xfb, 0xe5,
	0x76, 0xfc, 0x90, 0xab, 0xe8, 0x6b, 0x4f, 0xce, 0x63, 0x0e, 0x97, 0x8e, 0x24, 0xb5, 0x5e, 0xdb,
	0x8c, 0x2d, 0x58, 0x99, 0x56, 0x87, 0x1e, 0xdf, 0x02, 0x04, 0x21, 0x3f, 0x18, 0xca, 0xa2, 0x05,
	0x2b, 0xaf, 0xd7, 0x8f, 0x97, 0x7f, 0x6a, 0x2f, 0x3f, 0x8c, 0xd0, 0xa7, 0xc1, 0x50, 0x95, 0xca,
	0x7d, 0x59, 0xfc, 0x60, 0x90, 0x4c, 0x07, 0x24, 0x7e, 0x53, 0x62, 0xf7, 0x53, 0xc2, 0x6b, 0x88,
	0x3a, 0x31, 0xf9, 0xa7, 0x55, 0xd4, 0x09, 0x7c, 0x07, 0x17, 0x21, 0x85, 0x2c, 0x5e, 0xc4, 0xe5,
	0x7c, 0xfd, 0xe4, 0xaf, 0x4a, 0x24, 0xc2, 0xdf, 0xbd, 0x57, 0xde, 0x0e, 0xd5, 0xee, 0x5a, 0xfe,
	0x1a, 0xe6, 0x47, 0x30, 0x72, 0x88, 0xb7, 0x34, 0xec, 0xd6, 0x1f, 0x4b, 0xbc, 0x81, 0xd9, 0xb7,
	0x46, 0xf6, 0xb4, 0x33, 0x0d, 0xcd, 0x9b, 0xe8, 0x15, 0x2b, 0x6e, 0xe1, 0xe6, 0xd7, 0x18, 0x9d,
	0xd1, 0xca, 0x11, 0xbe, 0x84, 0x44, 0x06, 0xc7, 0x8c, 0x4d, 0x43, 0x3d, 0xfa, 0xc7, 0x50, 0xd5,
	0x9e, 0xfb, 0x54, 0x40, 0x7a, 0x58, 0x19, 0xe7, 0x90, 0xf4, 0x6a, 0xab, 0xf4, 0x77, 0xc5, 0xcf,
	0x30, 0x81, 0xd8, 0x68, 0xc1, 0x19, 0x5e, 0xc2, 0xb9, 0xd2, 0x82, 0x78, 0x84, 0x1c, 0xae, 0x8c,
	0x16, 0x75, 0x2b, 0x7b, 0xe7, 0xc9, 0x3a, 0x1e, 0x63, 0x0e, 0x0f, 0x2d, 0x19, 0xd9, 0xb5, 0x8d,
	0xef, 0xb4, 0xaa, 0x5b, 0xad, 0xbc, 0xd5, 0x52, 0x92, 0xe5, 0xe7, 0x98, 0xc2, 0x6c, 0xac, 0x1d,
	0x9f, 0xad, 0x1d, 0xc0, 0xe4, 0xf2, 0x71, 0x9c, 0x05, 0x09, 0xae, 0x8e, 0x57, 0xc0, 0x93, 0xf1,
	0x9d, 0x78, 0x2b, 0x79, 0xf9, 0x7f, 0x62, 0x48, 0xa3, 0x38, 0x7b, 0xce, 0xee, 0x2e, 0x26, 0xc2,
	0x8b, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x92, 0x4b, 0x0d, 0xec, 0xbb, 0x02, 0x00, 0x00,
}
